name: Docker Build, Push, and Azure Deploy

on:
  pull_request:
    branches:
      - main  
    types:
      - closed  

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Lint code with flake8
      run: |
        pip install flake8
        flake8 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event.pull_request.merged == true || github.event_name == 'push'  # Execute job only if PR is merged or there is a direct push
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: samuelmatildes/linuxaioperf:latest  

  deploy:
    runs-on: ubuntu-latest
    needs: build  
    steps:
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: LinuxAiO  
        osType: linux  # or windows, depending on your setting
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: samuelmatildes/linuxaioperf:latest  

  notify:
    runs-on: ubuntu-latest
    needs: [lint, build, deploy]
    if: always() 
    steps:
    - name: Notify Telegram on Success
      if: success()  # Run only if previous jobs were successful
      run: |
        curl -s --data "text=Workflow completed successfully.&parse_mode=HTML" --data "chat_id=${{ secrets.TG_CHAT_ID }}" "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage"

    - name: Notify Telegram on Failure
      if: failure()  # Run only if previous jobs failed
      run: |
        curl -s --data "text=Workflow failed. Check logs for details.&parse_mode=HTML" --data "chat_id=${{ secrets.TG_CHAT_ID }}" "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage"
